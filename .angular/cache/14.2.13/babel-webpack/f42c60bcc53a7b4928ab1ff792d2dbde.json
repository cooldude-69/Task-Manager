{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction ChangePasswordComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" New password and confirm password do not match. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChangePasswordComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"New Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChangePasswordComponent_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"New Password must be at least 6 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChangePasswordComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ChangePasswordComponent_div_13_div_1_Template, 2, 0, \"div\", 8);\n    i0.ɵɵtemplate(2, ChangePasswordComponent_div_13_div_2_Template, 2, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.changePasswordForm.get(\"newPassword\").errors == null ? null : ctx_r1.changePasswordForm.get(\"newPassword\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.changePasswordForm.get(\"newPassword\").errors == null ? null : ctx_r1.changePasswordForm.get(\"newPassword\").errors.minlength);\n  }\n}\n\nfunction ChangePasswordComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.errorMessage);\n  }\n}\n\nexport class ChangePasswordComponent {\n  constructor(fb, router) {\n    this.fb = fb;\n    this.router = router;\n    this.errorMessage = '';\n    this.passwordsMatchError = false;\n    this.changePasswordForm = this.fb.group({\n      oldPassword: ['', Validators.required],\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.changePasswordForm.invalid) {\n      return;\n    }\n\n    if (this.changePasswordForm.value.newPassword !== this.changePasswordForm.value.confirmPassword) {\n      this.passwordsMatchError = true;\n      return;\n    }\n\n    const payload = {\n      oldPassword: this.changePasswordForm.value.oldPassword,\n      newPassword: this.changePasswordForm.value.newPassword\n    }; // Simulate API call to change password\n    // Replace with actual HTTP POST request to your backend\n    // For demonstration, we're using a timeout to mimic async behavior\n\n    setTimeout(() => {\n      // Simulate success\n      alert('Password changed successfully'); // Redirect to login page\n\n      this.router.navigate(['/login']);\n    }, 1000); // 1 second delay\n    // In real application, uncomment the below HTTP POST request code and remove setTimeout\n    // this.http.post('/api/change-password', payload).subscribe(\n    //   response => {\n    //     alert('Password changed successfully');\n    //     this.router.navigate(['/login']);\n    //   },\n    //   error => {\n    //     this.errorMessage = 'Error changing password';\n    //   }\n    // );\n  }\n\n}\n\nChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n  return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChangePasswordComponent,\n  selectors: [[\"app-change-password\"]],\n  decls: 21,\n  vars: 4,\n  consts: [[1, \"change-password-container\"], [\"class\", \"error-message\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"oldPassword\"], [\"type\", \"password\", \"id\", \"oldPassword\", \"formControlName\", \"oldPassword\", \"required\", \"\"], [\"for\", \"newPassword\"], [\"type\", \"password\", \"id\", \"newPassword\", \"formControlName\", \"newPassword\", \"required\", \"\"], [4, \"ngIf\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"required\", \"\"], [\"type\", \"submit\"], [1, \"error-message\"]],\n  template: function ChangePasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Change Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ChangePasswordComponent_div_3_Template, 2, 0, \"div\", 1);\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function ChangePasswordComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Old Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"New Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵtemplate(13, ChangePasswordComponent_div_13_Template, 3, 2, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 9);\n      i0.ɵɵtext(16, \"Confirm New Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 11);\n      i0.ɵɵtext(19, \"Change Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, ChangePasswordComponent_div_20_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.passwordsMatchError);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.changePasswordForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.changePasswordForm.get(\"newPassword\").invalid && (ctx.changePasswordForm.get(\"newPassword\").dirty || ctx.changePasswordForm.get(\"newPassword\").touched));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".change-password-container[_ngcontent-%COMP%] {\\r\\n    max-width: 400px;\\r\\n    margin: 50px auto;\\r\\n    padding: 20px;\\r\\n    background: #fff;\\r\\n    border-radius: 28px;\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.6);\\r\\n  }\\r\\n  \\r\\n  .change-password-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 15px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 8px;\\r\\n    box-sizing: border-box;\\r\\n    border-radius: 25px;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n    background: #2161f3;\\r\\n    color: #fff;\\r\\n    border: none;\\r\\n    border-radius: 24px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%]:hover {\\r\\n    background: #1849a3;\\r\\n  }\\r\\n  \\r\\n  .error-message[_ngcontent-%COMP%] {\\r\\n    margin-top: 15px;\\r\\n    color: red;\\r\\n    text-align: center;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQix1Q0FBdUM7RUFDekM7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsY0FBYztJQUNkLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFdBQVc7SUFDWCxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsVUFBVTtJQUNWLGtCQUFrQjtFQUNwQiIsImZpbGUiOiJjaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaGFuZ2UtcGFzc3dvcmQtY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDUwcHggYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjhweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC42KTtcclxuICB9XHJcbiAgXHJcbiAgLmNoYW5nZS1wYXNzd29yZC1jb250YWluZXIgaDIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIGlucHV0IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvbiB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMjE2MWYzO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyNHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICBidXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZDogIzE4NDlhMztcclxuICB9XHJcbiAgXHJcbiAgLmVycm9yLW1lc3NhZ2Uge1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gICJdfQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAjC,QAAmD,gBAAnD;;;;;;;;ICCIC;IACEA;IACFA;;;;;;IAWMA;IAAoEA;IAAyBA;;;;;;IAC7FA;IAAqEA;IAA2CA;;;;;;IAFlHA;IACEA;IACAA;IACFA;;;;;IAFQA;IAAAA;IACAA;IAAAA;;;;;;IASVA;IAAgDA;IAAkBA;;;;;IAAlBA;IAAAA;;;;ADjBtD,OAAM,MAAOC,uBAAP,CAA8B;EAKlCC,YAAoBC,EAApB,EAA6CC,MAA7C,EAA2D;IAAvC;IAAyB;IAH7C,oBAAuB,EAAvB;IACA,2BAA+B,KAA/B;IAGE,KAAKC,kBAAL,GAA0B,KAAKF,EAAL,CAAQG,KAAR,CAAc;MACtCC,WAAW,EAAE,CAAC,EAAD,EAAKR,UAAU,CAACS,QAAhB,CADyB;MAEtCC,WAAW,EAAE,CAAC,EAAD,EAAK,CAACV,UAAU,CAACS,QAAZ,EAAsBT,UAAU,CAACW,SAAX,CAAqB,CAArB,CAAtB,CAAL,CAFyB;MAGtCC,eAAe,EAAE,CAAC,EAAD,EAAKZ,UAAU,CAACS,QAAhB;IAHqB,CAAd,CAA1B;EAKD;;EAEDI,QAAQ;IACN,IAAI,KAAKP,kBAAL,CAAwBQ,OAA5B,EAAqC;MACnC;IACD;;IAED,IAAI,KAAKR,kBAAL,CAAwBS,KAAxB,CAA8BL,WAA9B,KAA8C,KAAKJ,kBAAL,CAAwBS,KAAxB,CAA8BH,eAAhF,EAAiG;MAC/F,KAAKI,mBAAL,GAA2B,IAA3B;MACA;IACD;;IAED,MAAMC,OAAO,GAAG;MACdT,WAAW,EAAE,KAAKF,kBAAL,CAAwBS,KAAxB,CAA8BP,WAD7B;MAEdE,WAAW,EAAE,KAAKJ,kBAAL,CAAwBS,KAAxB,CAA8BL;IAF7B,CAAhB,CAVM,CAeN;IACA;IACA;;IACAQ,UAAU,CAAC,MAAK;MACd;MACAC,KAAK,CAAC,+BAAD,CAAL,CAFc,CAGd;;MACA,KAAKd,MAAL,CAAYe,QAAZ,CAAqB,CAAC,QAAD,CAArB;IACD,CALS,EAKP,IALO,CAAV,CAlBM,CAuBI;IAEV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;;AAhDiC;;;mBAAvBlB,yBAAuBD;AAAA;;;QAAvBC;EAAuBmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTpCxB,+BAAuC,CAAvC,EAAuC,IAAvC;MACQA;MAAeA;MAEnBA;MAGAA;MAAuCA;QAAA,OAAYyB,cAAZ;MAAsB,CAAtB;MACrCzB,+BAAwB,CAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MAC2BA;MAAYA;MACrCA;MAEFA;MACAA,+BAAwB,EAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MAC2BA;MAAYA;MACrCA;MACAA;MAIFA;MACAA,gCAAwB,EAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MAC+BA;MAAoBA;MACjDA;MAEFA;MACAA;MAAsBA;MAAeA;MACrCA;MACFA;;;;MAxBMA;MAAAA;MAGAA;MAAAA;MASIA;MAAAA;MAWFA;MAAAA","names":["Validators","i0","ChangePasswordComponent","constructor","fb","router","changePasswordForm","group","oldPassword","required","newPassword","minLength","confirmPassword","onSubmit","invalid","value","passwordsMatchError","payload","setTimeout","alert","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Ng server\\full-stack-project\\frontend\\src\\app\\components\\change-password\\change-password.component.ts","D:\\Ng server\\full-stack-project\\frontend\\src\\app\\components\\change-password\\change-password.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent {\n  changePasswordForm: FormGroup;\n  errorMessage: string = '';\n  passwordsMatchError: boolean = false;\n\n  constructor(private fb: FormBuilder, private router: Router) {\n    this.changePasswordForm = this.fb.group({\n      oldPassword: ['', Validators.required],\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.changePasswordForm.invalid) {\n      return;\n    }\n\n    if (this.changePasswordForm.value.newPassword !== this.changePasswordForm.value.confirmPassword) {\n      this.passwordsMatchError = true;\n      return;\n    }\n\n    const payload = {\n      oldPassword: this.changePasswordForm.value.oldPassword,\n      newPassword: this.changePasswordForm.value.newPassword\n    };\n\n    // Simulate API call to change password\n    // Replace with actual HTTP POST request to your backend\n    // For demonstration, we're using a timeout to mimic async behavior\n    setTimeout(() => {\n      // Simulate success\n      alert('Password changed successfully');\n      // Redirect to login page\n      this.router.navigate(['/login']);\n    }, 1000); // 1 second delay\n\n    // In real application, uncomment the below HTTP POST request code and remove setTimeout\n    // this.http.post('/api/change-password', payload).subscribe(\n    //   response => {\n    //     alert('Password changed successfully');\n    //     this.router.navigate(['/login']);\n    //   },\n    //   error => {\n    //     this.errorMessage = 'Error changing password';\n    //   }\n    // );\n  }\n}\n","<div class=\"change-password-container\">\n    <h2>Change Password</h2>\n    <!-- Error message for password mismatch -->\n    <div *ngIf=\"passwordsMatchError\" class=\"error-message\">\n      New password and confirm password do not match.\n    </div>\n    <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"oldPassword\">Old Password</label>\n        <input type=\"password\" id=\"oldPassword\" formControlName=\"oldPassword\" required>\n        \n      </div>\n      <div class=\"form-group\">\n        <label for=\"newPassword\">New Password</label>\n        <input type=\"password\" id=\"newPassword\" formControlName=\"newPassword\" required>\n        <div *ngIf=\"changePasswordForm.get('newPassword').invalid && (changePasswordForm.get('newPassword').dirty || changePasswordForm.get('newPassword').touched)\">\n          <div *ngIf=\"changePasswordForm.get('newPassword').errors?.required\">New Password is required.</div>\n          <div *ngIf=\"changePasswordForm.get('newPassword').errors?.minlength\">New Password must be at least 6 characters.</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"confirmPassword\">Confirm New Password</label>\n        <input type=\"password\" id=\"confirmPassword\" formControlName=\"confirmPassword\" required>\n        \n      </div>\n      <button type=\"submit\">Change Password</button>\n      <div *ngIf=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n    </form>\n  </div>\n  "]},"metadata":{},"sourceType":"module"}